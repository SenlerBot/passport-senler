{"version":3,"file":"index.js","sources":["index.ts"],"sourcesContent":["import axios from 'axios';\nimport { Request } from 'express';\nimport { Strategy as OAuth2Strategy, StrategyOptions, VerifyFunction } from 'passport-oauth2';\n\nexport interface SenlerStrategyOptions extends StrategyOptions {\n  clientID: string;\n  groupID?: string;\n  clientSecret: string;\n  callbackURL: string;\n}\n\nexport interface SenlerAccessTokenResponse {\n  access_token: string;\n  token_type?: string;\n  expires_in?: number;\n  refresh_token?: string;\n}\n\nexport interface SenlerChannel {\n  accessToken: string;\n  groupId?: string | undefined;\n}\n\nconst authorizationURL = 'https://senler.ru/cabinet/OAuth2authorize';\nconst tokenURL = 'https://senler.ru/ajax/cabinet/OAuth2token';\n\nexport class SenlerStrategy extends OAuth2Strategy {\n  public name: string = 'senler';\n  private _clientSecret: string;\n  private _tokenURL: string;\n  private _clientID: string;\n  private _groupID: string;\n  private _callbackURL: string;\n\n  constructor(options: Omit<SenlerStrategyOptions, 'authorizationURL' | 'tokenURL'>, verify?: VerifyFunction) {\n    options.groupID = options.groupID || '';\n\n    super({ ...options, authorizationURL, tokenURL }, verify || ((): void => {}));\n\n    this._clientSecret = options.clientSecret;\n    this._callbackURL = options.callbackURL;\n    this._groupID = options.groupID || '';\n    this._tokenURL = tokenURL;\n    this._clientID = options.clientID;\n  }\n\n  async authenticate(req: Request, options?: object): Promise<void> {\n    const authorizationCode = req.query.code?.toString();\n    const groupId = req.query.group_id?.toString();\n\n    if (!authorizationCode) {\n      return super.authenticate(req, options);\n    }\n\n    if (groupId) {\n      this._groupID = groupId;\n    }\n\n    try {\n      const accessToken = await this.getAccessToken(authorizationCode);\n      const channel: SenlerChannel = { \n        accessToken,\n        groupId: this._groupID || undefined\n      };\n      this.success(channel);\n    } catch (error) {\n      this.fail(`Failed to exchange authorization code: ${error}`);\n    }\n  }\n\n  async getAccessToken(authorizationCode: string): Promise<string> {\n    try {\n      const response = await axios.get<SenlerAccessTokenResponse>(this._tokenURL, {\n        params: {\n          grant_type: 'authorization_code',\n          client_id: this._clientID,\n          client_secret: this._clientSecret,\n          redirect_uri: this._callbackURL, // Must match the registered callback URL\n          code: authorizationCode,\n          group_id: this._groupID,\n        },\n      });\n\n      if (response.data && response.data.access_token) {\n        return response.data.access_token;\n      }\n\n      throw new Error('No access token in response');\n    } catch (error) {\n      throw new Error(`Failed to get access token: ${error}`);\n    }\n  }\n}\n"],"names":["tokenURL","_OAuth2Strategy","SenlerStrategy","options","verify","_this","groupID","call","this","_extends","authorizationURL","name","_clientSecret","_tokenURL","_clientID","_groupID","_callbackURL","clientSecret","callbackURL","clientID","_proto","prototype","authenticate","req","_req$query$code","_req$query$group_id","_this2","authorizationCode","query","code","toString","groupId","group_id","Promise","resolve","_temp","_catch","getAccessToken","then","accessToken","success","undefined","error","fail","e","reject","_this3","axios","get","params","grant_type","client_id","client_secret","redirect_uri","response","data","access_token","Error","OAuth2Strategy","Strategy"],"mappings":"4jBAuBA,IACMA,EAAW,iFAEWC,SAAAA,GAQ1B,SAAAC,EAAYC,EAAuEC,GAAuB,IAAAC,EAStE,OARlCF,EAAQG,QAAUH,EAAQG,SAAW,IAErCD,EAAAJ,EAAAM,KAAAC,KAAAC,EAAA,CAAA,EAAWN,EAAO,CAAEO,iBAdC,4CAciBV,SAAAA,IAAYI,GAAW,WAAe,IAACI,MAVxEG,KAAe,SAAQN,EACtBO,mBAAa,EAAAP,EACbQ,eAAS,EAAAR,EACTS,eAAS,EAAAT,EACTU,cAAQ,EAAAV,EACRW,kBAAY,EAOlBX,EAAKO,cAAgBT,EAAQc,aAC7BZ,EAAKW,aAAeb,EAAQe,YAC5Bb,EAAKU,SAAWZ,EAAQG,SAAW,GACnCD,EAAKQ,UAAYb,EACjBK,EAAKS,UAAYX,EAAQgB,SAASd,CACpC,WAACJ,KAAAC,yEAAAkB,IAAAA,EAAAlB,EAAAmB,UA+CAnB,OA/CAkB,EAEKE,aAAA,SAAaC,EAAcpB,GAAgB,IAAAqB,IAAAA,EAAAC,EAAAC,EAC/ClB,KAAMmB,EAAoBH,OAAHA,EAAGD,EAAIK,MAAMC,WAAVL,EAAAA,EAAgBM,WACpCC,EAA4B,OAArBN,EAAGF,EAAIK,MAAMI,eAAQ,EAAlBP,EAAoBK,WAEpC,IAAKH,EACH,OAAAM,QAAAC,QAAAjC,EAAAoB,UAAaC,aAAYf,KAAAmB,EAACH,EAAKpB,IAG7B4B,IACFL,EAAKX,SAAWgB,GACjB,IAAAI,EAAAC,EAAA,WAEGH,OAAAA,QAAAC,QACwBR,EAAKW,eAAeV,IAAkBW,KAAA,SAA1DC,GAKNb,EAAKc,QAJ0B,CAC7BD,YAAAA,EACAR,QAASL,EAAKX,eAAY0B,GAEN,EACxB,EAASC,SAAAA,GACPhB,EAAKiB,KAAI,0CAA2CD,EACtD,GAAC,OAAAT,QAAAC,QAAAC,GAAAA,EAAAG,KAAAH,EAAAG,KAAA,WAAA,QAAA,EACH,CAAC,MAAAM,GAAA,OAAAX,QAAAY,OAAAD,EAAA,CAAA,EAAAxB,EAEKiB,eAAA,SAAeV,GAAyB,IAAAmB,IAAAA,EAEkBtC,KAAIyB,OAAAA,QAAAC,QAAAE,EAD9D,WAAA,OAAAH,QAAAC,QACqBa,EAAAA,QAAMC,IAA+BF,EAAKjC,UAAW,CAC1EoC,OAAQ,CACNC,WAAY,qBACZC,UAAWL,EAAKhC,UAChBsC,cAAeN,EAAKlC,cACpByC,aAAcP,EAAK9B,aACnBa,KAAMF,EACNK,SAAUc,EAAK/B,aAEjBuB,KATIgB,SAAAA,GAWN,GAAIA,EAASC,MAAQD,EAASC,KAAKC,aACjC,OAAOF,EAASC,KAAKC,aAGvB,MAAU,IAAAC,MAAM,8BAA+B,EACjD,EAASf,SAAAA,GACP,MAAM,IAAIe,MAAqCf,+BAAAA,EACjD,GACF,CAAC,MAAAE,GAAAX,OAAAA,QAAAY,OAAAD,EAAA1C,CAAAA,EAAAA,CAAA,CAjEyBD,CAAQyD,EAAcC"}